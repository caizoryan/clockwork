{"blocks":[{"type":"group","output":"let host = \"http://localhost:3000/api/\";\nlet group_slug = \"music-07uq-kxjhz0\"\n\n//TODO: Implement connecting to channels\n// Implement the actual making of channels too, then implement the connecting of channels\n\nasync function search(query){\n  return await fetch(host+\"search/\"+query+\"/channels\").then((res) => res.json())\n}\n\nasync function get_artist(artist){\n  return await  search(artist).then((res) => {\n    let filt = res.filter(is_artist_or_band)\n    filt.forEach((channel) => {\n      console.log(\"title:\", channel.title)\n    })\n  \n    if (!filt || filt.lenght == 0) return false\n  \n    return filt[0]\n  })\n}\n\nasync function make_channel(title, status = \"closed\") {\n  console.log(\"making\", title)\n  return await fetch(host+\"channels/\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    \n    body: JSON.stringify({\n      title: title,\n      status: status\n    }),\n    \n  }).then((res) => res.json())\n}\n\n\n// to qualify -->\n// owned by group & group slug = \"music-07uq-kxjhz0\"\nfunction is_artist_or_band (channel) {\n  if (channel.group && channel.group.slug == group_slug){\n    let tag = channel.title.split(\"/\")[0].trim()\n    return tag.toLowerCase() == \"(artist)\" || tag.toLowerCase() == \"(band)\"\n  }\n  else return false\n}\n\n\nlet style = `\nhtml{color: white}\n.control {\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  padding: 80px;\n}\n\ninput {\n  width: 300px;\n}\n\n.c {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 10px;\n}`\n\nconst $ = (e) => document.querySelector(e)\n\nlet control = () => {\n  let name = sig(\"\")\n  let year = sig(\"\")\n  let artist = sig(\"\")\n\n  let artist_channel_id = sig(null)\n  let album_channel_id = sig(null)\n  \n  let artist_exists = sig(null)\n  let concluded = sig(true)\n\n  let make_album_channel = sig(null)\n  let make_artist_channel = sig(null)\n\n  let channel_name = mem(() => name() == \"\" || artist == \"\" ? \"\" : `Album / ${name()} (${year()})`)\n  let artist_channel_name = mem(() => name() == \"\" || artist == \"\" ? \"\" : `(Artist) / ${artist()}`)\n\n  let actions = mem(() => {\n    // if checking for artist and !aritst_exists -> loading\n    // else if !checking for artist and artist exists show actions\n    // else nothing\n    if (name() == \"\" || artist() == \"\") return \"Set name and artist\"\n\n    if (!concluded() && !artist_exists()){\n      return \"checking for artists\"\n    }\n\n    else if (concluded()&& artist_exists()){\n      // make a channel and connect to artist channel\n      make_album_channel.set(channel_name())\n      return  `Make channel: ${make_album_channel()} and connect\n        to ${artist_channel_id()}\n      `\n    }\n    \n    else if (concluded()&& !artist_exists()){\n      \n      make_album_channel.set(channel_name())\n      make_artist_channel.set(artist_channel_name())\n      return  `\n      Make Artist channel: ${make_artist_channel()} then\n      Make channel: ${make_album_channel()} and then connect to the just made channel`\n    }\n\n    else {\n      return \"weep\"\n    }\n    \n  })\n\n  const extract_name = (channel) => channel.title.split(\"/\")[1].trim().toLowerCase()\n  \n  const set = async () => {\n    console.log(document)\n     name.set( $(\"#album-name\").value)\n     year.set( $(\"#album-year\").value)\n    artist.set($(\"#artist-band\").value)\n     concluded.set(false)\n     let exists = await get_artist(artist())\n     concluded.set(true)\n    \n     if (exists && extract_name(exists) == artist()) {\n       artist_channel_id.set(exists.slug)\n       artist_exists.set(true)\n     }\n     else  artist_exists.set(false)\n  }\n  \n  return html`\n  style -- ${style}\n  .control\n    .c\n      span.label -- Name\n      input [type=text id=album-name]\n      \n    .c\n      span.label -- Year\n      input [type=number id=album-year value=2025]\n      \n    .c\n      span.label -- Artist/band\n      input [type=text id=artist-band value=lorde]\n  \n    button [onclick=${set}] -- Set\n    p -- ${channel_name}\n    p -- ${actions}\n`}\n\nrender(control, document.body)","blocks":[{"id":"in2sf","type":"default","code":"","active":true,"focus":false,"focused":false,"output":"let host = \"http://localhost:3000/api/\";\nlet group_slug = \"music-07uq-kxjhz0\"\n\n//TODO: Implement connecting to channels\n// Implement the actual making of channels too, then implement the connecting of channels\n\nasync function search(query){\n  return await fetch(host+\"search/\"+query+\"/channels\").then((res) => res.json())\n}\n\nasync function get_artist(artist){\n  return await  search(artist).then((res) => {\n    let filt = res.filter(is_artist_or_band)\n    filt.forEach((channel) => {\n      console.log(\"title:\", channel.title)\n    })\n  \n    if (!filt || filt.lenght == 0) return false\n  \n    return filt[0]\n  })\n}\n\nasync function make_channel(title, status = \"closed\") {\n  console.log(\"making\", title)\n  return await fetch(host+\"channels/\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    \n    body: JSON.stringify({\n      title: title,\n      status: status\n    }),\n    \n  }).then((res) => res.json())\n}\n\n\n// to qualify -->\n// owned by group & group slug = \"music-07uq-kxjhz0\"\nfunction is_artist_or_band (channel) {\n  if (channel.group && channel.group.slug == group_slug){\n    let tag = channel.title.split(\"/\")[0].trim()\n    return tag.toLowerCase() == \"(artist)\" || tag.toLowerCase() == \"(band)\"\n  }\n  else return false\n}\n\n\nlet style = `\nhtml{color: white}\n.control {\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  padding: 80px;\n}\n\ninput {\n  width: 300px;\n}\n\n.c {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 10px;\n}`\n\nconst $ = (e) => document.querySelector(e)\n\nlet control = () => {\n  let name = sig(\"\")\n  let year = sig(\"\")\n  let artist = sig(\"\")\n\n  let artist_channel_id = sig(null)\n  let album_channel_id = sig(null)\n  \n  let artist_exists = sig(null)\n  let concluded = sig(true)\n\n  let make_album_channel = sig(null)\n  let make_artist_channel = sig(null)\n\n  let channel_name = mem(() => name() == \"\" || artist == \"\" ? \"\" : `Album / ${name()} (${year()})`)\n  let artist_channel_name = mem(() => name() == \"\" || artist == \"\" ? \"\" : `(Artist) / ${artist()}`)\n\n  let actions = mem(() => {\n    // if checking for artist and !aritst_exists -> loading\n    // else if !checking for artist and artist exists show actions\n    // else nothing\n    if (name() == \"\" || artist() == \"\") return \"Set name and artist\"\n\n    if (!concluded() && !artist_exists()){\n      return \"checking for artists\"\n    }\n\n    else if (concluded()&& artist_exists()){\n      // make a channel and connect to artist channel\n      make_album_channel.set(channel_name())\n      return  `Make channel: ${make_album_channel()} and connect\n        to ${artist_channel_id()}\n      `\n    }\n    \n    else if (concluded()&& !artist_exists()){\n      \n      make_album_channel.set(channel_name())\n      make_artist_channel.set(artist_channel_name())\n      return  `\n      Make Artist channel: ${make_artist_channel()} then\n      Make channel: ${make_album_channel()} and then connect to the just made channel`\n    }\n\n    else {\n      return \"weep\"\n    }\n    \n  })\n\n  const extract_name = (channel) => channel.title.split(\"/\")[1].trim().toLowerCase()\n  \n  const set = async () => {\n    console.log(document)\n     name.set( $(\"#album-name\").value)\n     year.set( $(\"#album-year\").value)\n    artist.set($(\"#artist-band\").value)\n     concluded.set(false)\n     let exists = await get_artist(artist())\n     concluded.set(true)\n    \n     if (exists && extract_name(exists) == artist()) {\n       artist_channel_id.set(exists.slug)\n       artist_exists.set(true)\n     }\n     else  artist_exists.set(false)\n  }\n  \n  return html`\n  style -- ${style}\n  .control\n    .c\n      span.label -- Name\n      input [type=text id=album-name]\n      \n    .c\n      span.label -- Year\n      input [type=number id=album-year value=2025]\n      \n    .c\n      span.label -- Artist/band\n      input [type=text id=artist-band value=lorde]\n  \n    button [onclick=${set}] -- Set\n    p -- ${channel_name}\n    p -- ${actions}\n`}\n\nrender(control, document.body)","cursor":1597}],"fold":false,"focus":false}]}