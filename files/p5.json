{"blocks":[{"type":"group","output":"// \nlet grid = []\n\nlet raw_tiles = [\n  {\n    src: \"./tiles/0.png\",\n    sockets: [0,0,0,0]\n  },\n  \n  {\n    src: \"./tiles/1.png\",\n    sockets: [0,1,0,1]\n  },\n  \n  {\n    src: \"./tiles/2.png\",\n    sockets: [0,1,1,1]\n  },\n  \n  {\n    src: \"./tiles/3.png\",\n    sockets: [1,0,0,1]\n  },\n]\n\nfunction Cell(options) {\n  options = options || []\n  let collapse = false\n\n  return {\n    options,\n    collapsed\n  }\n}\n\nfunction Tile(image, sockets) {\n  return {\n    image, sockets\n  }\n}\nlet tiles = []\n\nlet sketch = (p) => {\n  p.preload = () => {\n    raw_tiles.forEach((tile) => {\n      let image = p.loadImage(tile.src)\n      let sockets = tile.sockets\n      tiles.push(Tile(image, sockets ))\n    })\n    console.log(tiles)\n  }\n  \n  p.setup = () => {\n    p.createCanvas(500,500);\n    p.background(\"black\")\n  }\n\n  p.draw = () => {\n    let x = p.mouseX\n    let y = p.mouseY\n\n    let wid = p.width\n    let hei = p.height \n    \n\n    p.image(tiles[0].image, 0, 0, wid / 2, hei/ 2)\n    p.image(tiles[1].image, wid / 2, 0, wid / 2, hei/ 2)\n    p.image(tiles[2].image, 0, hei / 2, wid / 2, hei/ 2)\n    p.image(tiles[3].image, wid / 2, hei / 2, wid / 2, hei/ 2)\n\n    p.ellipse(x, y, 20)\n  }\n  \n}\n\nnew p5(sketch)","blocks":[{"id":"sxxnn","type":"default","code":"","active":false,"focus":false,"focused":false,"output":"// \nlet grid = []\n\nlet raw_tiles = [\n  {\n    src: \"./tiles/0.png\",\n    sockets: [0,0,0,0]\n  },\n  \n  {\n    src: \"./tiles/1.png\",\n    sockets: [0,1,0,1]\n  },\n  \n  {\n    src: \"./tiles/2.png\",\n    sockets: [0,1,1,1]\n  },\n  \n  {\n    src: \"./tiles/3.png\",\n    sockets: [1,0,0,1]\n  },\n]\n\nfunction Cell(options) {\n  options = options || []\n  let collapse = false\n\n  return {\n    options,\n    collapsed\n  }\n}\n\nfunction Tile(image, sockets) {\n  return {\n    image, sockets\n  }\n}","cursor":467},{"id":"in2sf","type":"default","code":"","active":true,"focus":false,"focused":false,"output":"let tiles = []\n\nlet sketch = (p) => {\n  p.preload = () => {\n    raw_tiles.forEach((tile) => {\n      let image = p.loadImage(tile.src)\n      let sockets = tile.sockets\n      tiles.push(Tile(image, sockets ))\n    })\n    console.log(tiles)\n  }\n  \n  p.setup = () => {\n    p.createCanvas(500,500);\n    p.background(\"black\")\n  }\n\n  p.draw = () => {\n    let x = p.mouseX\n    let y = p.mouseY\n\n    let wid = p.width\n    let hei = p.height \n    \n\n    p.image(tiles[0].image, 0, 0, wid / 2, hei/ 2)\n    p.image(tiles[1].image, wid / 2, 0, wid / 2, hei/ 2)\n    p.image(tiles[2].image, 0, hei / 2, wid / 2, hei/ 2)\n    p.image(tiles[3].image, wid / 2, hei / 2, wid / 2, hei/ 2)\n\n    p.ellipse(x, y, 20)\n  }\n  \n}\n","cursor":647},{"id":"9qc1vd","type":"default","code":"","active":false,"focus":false,"focused":false,"output":"new p5(sketch)","cursor":13}],"fold":false,"focus":false}]}